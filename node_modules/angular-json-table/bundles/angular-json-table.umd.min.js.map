{"version":3,"sources":["ng://angular-json-table/src/app/modules/data-table/data-table.component.ts","ng://angular-json-table/src/app/modules/data-table/data-table.module.ts"],"names":["DataTableComponent","EventEmitter","prototype","ngOnInit","this","processData","selected","e","id","target","checked","push","deleteSelected","_this","length","deleteRow","emit","dataSource","filter","value","index","array","includes","paginate","page","totalItems","total","perpage","Math","ceil","start","end","data","slice","pageOnChange","perPage","previousPage","nextPage","showUpdate","dialogue","forEach","dialogeData","closeDialogue","submitUpdateRow","updateRow","headers","thead","displayed","console","warn","Component","args","selector","template","Input","Output","JSONTableModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"qYAAA,IAAAA,EAAA,WA4BE,SAAAA,mBAfyC,IAAIC,EAAAA,4BACJ,IAAIA,EAAAA,uBAEjC,kBAEA,gBACF,aAEH,eAEQ,kBACJ,iBACA,mBACQ,UAKnBD,EAAAE,UAAAC,SAAA,WACEC,KAAKC,eAGPL,EAAAE,UAAAI,SAAA,SAASC,EAAGC,GACND,EAAEE,OAAOC,SACXN,KAAKM,QAAQC,KAAKH,IAItBR,EAAAE,UAAAU,eAAA,WAAA,IAAAC,EAAAT,KAC4B,EAAtBA,KAAKM,QAAQI,SACfV,KAAKW,UAAUC,KAAKZ,KAAKM,SACzBN,KAAKa,WAAab,KAAKa,WAAWC,OAAO,SAACC,EAAOC,EAAOC,GACtD,OAAQR,EAAKH,QAAQY,SAASH,EAAMX,MAEtCJ,KAAKM,QAAU,GACfN,KAAKmB,SAASnB,KAAKoB,QAIvBxB,EAAAE,UAAAuB,WAAA,WACE,OAAIrB,KAAKsB,MAAQtB,KAAKuB,QACbC,KAAKC,KAAKzB,KAAKsB,MAAQtB,KAAKuB,SAE5B,GAIX3B,EAAAE,UAAAqB,SAAA,SAASC,GACP,IAAMM,EAAS1B,KAAKuB,QAAUH,EAAQpB,KAAKuB,QACrCI,EAAO3B,KAAKuB,QAAUH,EAE5BpB,KAAK4B,KAAW,KAAI5B,KAAKa,WAAWgB,MAAMH,EAAOC,IAInD/B,EAAAE,UAAAgC,aAAA,SAAaC,GACX/B,KAAKuB,QAAUQ,EACf/B,KAAKoB,KAAO,EAEZpB,KAAKmB,SAASnB,KAAKoB,OAGrBxB,EAAAE,UAAAkC,aAAA,WACkB,EAAZhC,KAAKoB,MACPpB,KAAKoB,OAGPpB,KAAKmB,SAASnB,KAAKoB,OAGrBxB,EAAAE,UAAAmC,SAAA,WACMjC,KAAKoB,KAAO,GAAKpB,KAAKqB,cACxBrB,KAAKoB,OAGPpB,KAAKmB,SAASnB,KAAKoB,OAGrBxB,EAAAE,UAAAoC,WAAA,SAAW9B,GAAX,IAAAK,EAAAT,KACEA,KAAKmC,UAAW,EAEhBnC,KAAK4B,KAAKA,KAAKQ,QAAQ,SAACrB,GAClBA,EAAMX,KAAOA,IACfK,EAAK4B,YAActB,MAMzBnB,EAAAE,UAAAwC,cAAA,WACEtC,KAAKmC,SAAWnC,KAAKmC,UAAW,EAAQnC,KAAKmC,UAAW,EACxDnC,KAAKqC,YAAc,IAGrBzC,EAAAE,UAAAyC,gBAAA,SAAgBF,GACdrC,KAAKwC,UAAU5B,KAAKyB,IAGdzC,EAAAE,UAAAG,uBACFD,KAAKa,YAAuC,EAAzBb,KAAKa,WAAWH,QACrCV,KAAKsB,MAAQtB,KAAKa,WAAWH,OAEzBV,KAAKyC,QAAQC,OAAqC,EAA5B1C,KAAKyC,QAAQC,MAAMhC,QAC3CV,KAAK4B,KAAc,QAAI5B,KAAKyC,QAAQC,MACpC1C,KAAK2C,UAAY3C,KAAKyC,QAAQE,WAE9BC,QAAQC,KAAK,sCAGf7C,KAAKmB,SAASnB,KAAKoB,OAEnBwB,QAAQC,KAAK,mDA1HlBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,SAAA,i4JAKCC,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,yBAEAC,EAAAA,0BACAA,EAAAA,YAdH,GCAAC,EAAA,oDAKCC,EAAAA,SAAQN,KAAA,CAAC,CACRO,QAAS,CACPC,EAAAA,aACAC,EAAAA,aAEFC,aAAc,CAAC7D,GACf8D,QAAS,CAAC9D,SAXZ","sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'json-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent implements OnInit {\n\n  @Input() dataSource: any;\n  @Input() headers: any;\n  @Input() update: boolean;\n\n  @Output() deleteRow: EventEmitter<any> = new EventEmitter<any>();\n  @Output() updateRow: EventEmitter<any> = new EventEmitter<any>();\n\n  data: any = {};\n\n  displayed = [];\n  perpage = 10;\n  total: number;\n  page = 1;\n\n  checked: any = [];\n  checkAll = false;\n  dialogue = false;\n  dialogeData: any = {};\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.processData();\n  }\n\n  selected(e, id) {\n    if (e.target.checked) {\n      this.checked.push(id);\n    }\n  }\n\n  deleteSelected() {\n    if (this.checked.length > 0) {\n      this.deleteRow.emit(this.checked);\n      this.dataSource = this.dataSource.filter((value, index, array) => {\n        return !this.checked.includes(value.id);\n      });\n      this.checked = [];\n      this.paginate(this.page);\n    }\n  }\n\n  totalItems() {\n    if (this.total > this.perpage) {\n      return Math.ceil(this.total / this.perpage);\n    } else {\n      return 1;\n    }\n  }\n\n  paginate(page) {\n    const start = (this.perpage * page) - this.perpage;\n    const end = (this.perpage * page);\n    // console.log(start, end);\n    this.data['data'] = this.dataSource.slice(start, end);\n    // console.log(this.data);\n  }\n\n  pageOnChange(perPage) {\n    this.perpage = perPage;\n    this.page = 1;\n    //console.log(perPage);\n    this.paginate(this.page);\n  }\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n    }\n\n    this.paginate(this.page);\n  }\n\n  nextPage() {\n    if (this.page + 1 <= this.totalItems()) {\n      this.page++;\n    }\n\n    this.paginate(this.page);\n  }\n\n  showUpdate(id: any) {\n    this.dialogue = true;\n    // console.log('Showing the updates');\n    this.data.data.forEach((value) => {\n      if (value.id === id) {\n        this.dialogeData = value;\n      }\n    });\n\n  }\n\n  closeDialogue() {\n    this.dialogue ? this.dialogue = false : this.dialogue = true;\n    this.dialogeData = {};\n  }\n\n  submitUpdateRow(dialogeData: any) {\n    this.updateRow.emit(dialogeData);\n  }\n\n  private processData() {\n    if (this.dataSource && this.dataSource.length > 0) {\n      this.total = this.dataSource.length;\n\n      if (this.headers.thead && this.headers.thead.length > 0) {\n        this.data['headers'] = this.headers.thead;\n        this.displayed = this.headers.displayed;\n      } else {\n        console.warn('No headers data for table provided');\n      }\n\n      this.paginate(this.page);\n    } else {\n      console.warn('No data for table provided');\n    }\n\n\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DataTableComponent} from './data-table.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [DataTableComponent],\n  exports: [DataTableComponent]\n})\nexport class JSONTableModule {\n}\n"]}